// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelGuide.Data;

#nullable disable

namespace TravelGuide.Migrations
{
    [DbContext(typeof(TravelGuideDbContext))]
    [Migration("20250509191937_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelGuide.Models.Attraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EntranceFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Attractions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Главная площадь Москвы",
                            EntranceFee = 0m,
                            History = "История Красной площади...",
                            Name = "Красная площадь",
                            PhotoPath = "images/red-square.jpg",
                            WorkingHours = "Круглосуточно"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Description = "Один из крупнейших музеев мира",
                            EntranceFee = 800m,
                            History = "Основан в 1764 году Екатериной II",
                            Name = "Эрмитаж",
                            PhotoPath = "images/hermitage.jpg",
                            WorkingHours = "10:00-18:00, выходной - понедельник"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Description = "Историческая крепость",
                            EntranceFee = 500m,
                            History = "Объект Всемирного наследия ЮНЕСКО",
                            Name = "Казанский Кремль",
                            PhotoPath = "images/kazan-kremlin.jpg",
                            WorkingHours = "08:00-20:00"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 1,
                            Description = "Исторический комплекс в центре Москвы",
                            EntranceFee = 1000m,
                            History = "Главный общественно-политический комплекс страны",
                            Name = "Московский Кремль",
                            PhotoPath = "images/moscow-kremlin.jpg",
                            WorkingHours = "10:00-17:00"
                        });
                });

            modelBuilder.Entity("TravelGuide.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            History = "Москва — столица России, крупнейший город страны.",
                            Name = "Москва",
                            PhotoPath = "images/moscow.jpg",
                            Population = 12655050,
                            Region = "Центральный"
                        },
                        new
                        {
                            Id = 2,
                            History = "Санкт-Петербург — культурная столица России.",
                            Name = "Санкт-Петербург",
                            PhotoPath = "images/spb.jpg",
                            Population = 5392992,
                            Region = "Северо-Западный"
                        },
                        new
                        {
                            Id = 3,
                            History = "Казань — столица Республики Татарстан.",
                            Name = "Казань",
                            PhotoPath = "images/kazan.jpg",
                            Population = 1257391,
                            Region = "Приволжский"
                        });
                });

            modelBuilder.Entity("TravelGuide.Models.Attraction", b =>
                {
                    b.HasOne("TravelGuide.Models.City", "City")
                        .WithMany("Attractions")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelGuide.Models.City", b =>
                {
                    b.Navigation("Attractions");
                });
#pragma warning restore 612, 618
        }
    }
}
